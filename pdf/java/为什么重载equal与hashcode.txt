
为什么要重载equals（) ?
	因为Object的equals（）默认是两个对象的引用的比较
	意思就是指向同一内存，地址则相等，否则不相等
	如果你现在需要利用对象里面的值来判断是否相等，则
	重载equals()方法


为什么要重载hashcode（）方法？
	一般的地方不需要重载hashcode( )方法， 只有当类需要放在
	hashtable、hashmap、hashset等hash结构的集合时才会重
	载hashcode,那么为什么要重载hashcode( ) ,就Hashmap来说，
	好比hashmap就是一个大内存块，里面有很多小内存块，小内存
	块里面是一系列的对象，可以利用hashcode来查找小内存块
	hashcode%size(小内存块数量)，所以当equals相等时，hashcode
	也必须相等，而且如果是object对象，必须重载hashcode和equals


为什么重载equals同时也需要重写hashcode？
	在将对象存入集合中，有时需要根据equals和hashcode方法判定
	要存入的两个对象是否一致，如果这两个方法判定的结果不一致，会
	出现意想不到的错误，即使一个普通对象当前没有必要重写hashcode
	方法，那么从长远的角度来看，为了避免今后一些不必要的麻烦，最好
	还是将equals和hashcode方法一同重写，并保证判定结果一致。
	这也看做是一项约定和惯例

